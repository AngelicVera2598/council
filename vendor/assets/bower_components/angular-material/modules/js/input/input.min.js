/*!
 * Angular Material Design
 * https://github.com/angular/material
 * @license MIT
 * v0.7.0-rc1-master-60fcd6f
 */
!function(){function t(t){function n(n,e){t(e)}function e(t,n){var e=this;e.setFocused=function(t){n.toggleClass("md-input-focused",!!t)},e.setHasValue=function(t){n.toggleClass("md-input-has-value",!!t)},t.$watch(function(){return e.label&&e.input},function(t){t&&!e.label.attr("for")&&e.label.attr("for",e.input.attr("id"))})}return e.$inject=["$scope","$element","$mdUtil"],{restrict:"E",link:n,controller:e}}function n(){return{restrict:"E",require:"^?mdInputContainer",link:function(t,n,e,i){i&&(i.label=n,t.$on("$destroy",function(){i.label=null}))}}}function e(t){function n(t){return t.addClass("md-input"),e}function e(n,e,i,u){function r(t){return o.setHasValue(!a.$isEmpty(t)),t}var o=u[0],a=u[1];if(o){if(o.input)throw new Error("<md-input-container> can only have *one* <input> or <textarea> child element!");e.attr("id")||e.attr("id","input_"+t.nextUid()),o.input=e,a?(a.$formatters.push(r),a.$parsers.push(r)):(e.on("input",function(){o.setHasValue((""+e.val()).length>0)}),o.setHasValue((""+e.val()).length>0)),e.on("focus",function(){o.setFocused(!0)}).on("blur",function(){o.setFocused(!1)}),n.$on("$destroy",function(){o.setFocused(!1),o.setHasValue(!1),o.input=null})}}return{restrict:"E",require:["^?mdInputContainer","?ngModel"],compile:n}}angular.module("material.components.input",["material.core"]).directive("mdInputContainer",t).directive("label",n).directive("input",e).directive("textarea",e),t.$inject=["$mdTheming"],e.$inject=["$mdUtil"]}();